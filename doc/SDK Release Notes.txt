i.MX6 Platform SDK Release Notes
================================

Version 1.1:

- Fixed EIM test failure on sabre_ai board.
- Added obds application.
- Improved FAT filesystem cache.
- Improved uSDHC API to allow access to entire 4GB card.
- Added stream benchmark application.
- Moved filesystem read/write performance test to be a new app.
- New cpu_workpoint API in sdk/drivers/cpu_utility.
- Improved menu API in sdk/utility/menu.h.
- Fixed bug in D-cache invalidate and clean routines.
- If an application returns from main(), _sys_exit() will now be called automatically.
- Fixed a DDR region overflow linker error when using version 4.5.2 of the toolchain.
- Removed smbus driver, as no i.MX6 boards have compatible devices and thus was untested.
- Improved GIC driver by making it easier to init with new gic_init() API.
- Implemented support for CSI test mode.
- Converted SATA driver to use standard register definition macros.
- Improvements to PWM driver.
- Completely removed use of hw_module_t struct throughout SDK. Driver APIs that previously used this
struct have been updated to take the relevant parameters, such as the peripheral instance, directly.
Affected drivers: i2c, epit, uart, snvs, gpt, timer, flexcan.
- The SDK build system now supports parallel builds.
- Added jump_to_sdp() API in system_util.h to enter ROM Serial Download Protocol mode.
- Static initialization of C++ objects now works as expected.
- Fixed BCH ECC encoded reads and writes in GPMI driver.
- Updated DCDs and debugger init scripts to the most recent versions.
- Added GpioPin class in gpio driver. See sdk/drivers/gpio/gpio_pin.h.
- Added classes for I2C and SPI devices. See sdk/drivers/i2c/i2c_device.h and
sdk/drivers/spi/spi_device.h.
- Added class to provide a software I2C port. See sdk/drivers/i2c/software_i2c_port.h.
- Added gpio_set_gpio() API to gpio driver which configures the pin mux for a GPIO pin.
- Added lwIP open source TCP/IP stack to the SDK.
- Added two demo applications for lwIP: ping and httpd.
- Implemented some minor improvements to ENET and FEC driver APIs.
- Changed ENET driver so that it no longer puts the PHY into external loopback mode. A new API is
added to enable loopback for the ENET unit test.
- Added set_card_access_mode() API to uSDHC driver to replace some global variables that were used
to configure DMA and interrupt mode.
- Added read_input_string() and read_int() APIs to system_util.h.
- Fixed ESAI driver so that it no longer always outputs each sample 3 times.
- New arm_set_interrupt_state() API in cortex_a9.h.
- Versions of all debugger init scripts are now provided for ARM DS-5.
- Fixed a compiler warning generated by gcc 4.7.2 in the gpmi driver.
- New version 3.4.0.4 of the IOMux Tool.
- New driver for the MMA8451 accelerometer.
- Added a full-featured USB Device stack under sdk/common/usb_stack.
- Normalized line ending style to Unix (LF) for a few source files.
- Created new APIs to manage starting up and shutting down secondary CPU cores. See
cpu_start_secondary() and cpu_disable() in sdk/drivers/cpu_utility/cpu_utility.h.
- Converted the multicore_demo application to a unit test under sdk/drivers/cpu_utility/test.
- Added smp_primes multicore example application.
- Improved spinlock API to work correctly in SMP situations.
- Many small changes and improvements.
- The startup code leaves interrupts disabled, and platform_init() now explicitly enables them.
- Added readme files for all applications.
- Changed how the makefiles archive objects in .a libraries. The timestamps of objects are compared
with their copies in the archive, rather than being compared with the timestamps of the archive
itself. This is to work around certain older Linux systems that do not save fractions of a second in
file timestamps. One side effect of this is that the ar tool is invoked once per object that needs
updating, where previously it was invoked to update a number of files at once. To reduce build log
clutter, the archive messages are no longer shown.


Version 1.0:
- Initial public release.

